import { useState } from "react";
import logo from "../assets/kvityulya-logo.jpg";

// src/Login.tsx

const API_URL = "https://script.google.com/macros/s/AKfycbxC_0aSKUbdHntEPzqknPCqS77j3KXFQOken50LJTbRDNpaRlxGYoNsBajM2BAcbdTs_g/exec";


export default function LoginPage() {
  const [login, setLogin] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState("");

  const handleLogin = async () => {
    setError("");
    try {
      const response = await fetch(API_URL, {
        method: "POST",
        body: JSON.stringify({ login, password }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      const result = await response.json();
      if (result.success) {
        alert(`–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥. –†–æ–ª—å: ${result.role}`);
        // TODO: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ –∑–±–µ—Ä–µ–≥—Ç–∏ —Ä–æ–ª—å —É state
      } else {
        setError(result.message || "–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É");
      }
    } catch (err) {
      setError("–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ –∞–±–æ —Å–µ—Ä–≤–µ—Ä–∞");
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-green-50 flex items-center justify-center px-4">
      <div className="w-full max-w-md bg-white/80 backdrop-blur-md rounded-2xl shadow-2xl p-8 space-y-6 border border-green-100">
        {/* –õ–æ–≥–æ—Ç–∏–ø */}
        <div className="flex justify-center">
          <img
            src={logo}
            alt="–õ–æ–≥–æ—Ç–∏–ø –ö–≤—ñ—Ç—é–ª—è"
            className="w-32 h-auto rounded-xl shadow-md"
          />
        </div>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h1 className="text-center text-3xl font-bold text-green-700">
          –í—Ö—ñ–¥ —É <span className="text-pink-500">–ö–≤—ñ—Ç—é–ª—é üå∏</span>
        </h1>

        {/* –§–æ—Ä–º–∞ */}
        <div className="space-y-4">
          <input
            type="text"
            placeholder="–õ–æ–≥—ñ–Ω"
            value={login}
            onChange={(e) => setLogin(e.target.value)}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition"
          />

          {/* –ü–∞—Ä–æ–ª—å –∑ –∫–Ω–æ–ø–∫–æ—é */}
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              placeholder="–ü–∞—Ä–æ–ª—å"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition pr-14"
            />
            <button
              type="button"
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-2 top-1/2 -translate-y-1/2 text-sm text-green-600 hover:underline"
            >
              {showPassword ? "–°—Ö–æ–≤–∞—Ç–∏" : "–ü–æ–∫–∞–∑–∞—Ç–∏"}
            </button>
          </div>

          <button
            onClick={handleLogin}
            className="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-2 rounded-lg shadow-md transition-all"
          >
            üåø –£–≤—ñ–π—Ç–∏
          </button>

          {error && <p className="text-red-600 text-sm text-center">{error}</p>}
        </div>

        {/* –ü—ñ–¥–ø–∏—Å */}
        <p className="text-center text-sm text-gray-500 mt-2">
          ¬© {new Date().getFullYear()} –ö–≤—ñ—Ç—é–ª—è. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ.
        </p>
      </div>
    </div>
  );
}
